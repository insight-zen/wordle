* Use ~caddy~ for local testing.
#+begin_src sh
  # Start the server - server listens on https://localhost or https://wordle.dev.test
  # localhost: No caching. wordle.dev.test: file_server with browse, caching enables
  # Reads configuration from ~Caddyfile~
  caddy start

  # Stop Caddy
  caddy stop

  # If you make changes to ~Caddyfile~
  caddy reload
#+end_src

** Run caddy with a custom config
#+begin_src sh
  # If the config file CaddyFile is in a different directory
  caddy run --config Caddyfile_in_some_other_dir

  # To use configuration from some other file (not Caddyfile)
  # Adding ~--watch~ reloads and restart caddy if the config file changes
  caddy run --watch  --adapter caddyfile --config caddy/first.config
#+end_src

* In the browser
 ~window.wl~ is mapped to ~Wordle~ which is the App instance.
 ~window.wDict~ maps to =refDict=
 ~window.wfit~ maps to =WordFit=
 

* Misc Notes
  let str = "const scrbDict = [" + ws.map(w => `"${w}"`).join(", ") + "]";
